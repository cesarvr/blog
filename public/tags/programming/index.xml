<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Cesar&#39;s Bitacora</title>
    <link>https://cesarvr.io/tags/programming/</link>
    <description>Recent content in Programming on Cesar&#39;s Bitacora</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cesarvr.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating Your Own Containers</title>
      <link>https://cesarvr.io/post/2018-05-22-create-containers/</link>
      <pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cesarvr.io/post/2018-05-22-create-containers/</guid>
      <description>What is this post about This post is basically about how to create your own container program using C. In this article we are going to review the technology and principles that make the isolation of processes a reality in Linux, the steps are based on this excellent talk by Liz Rice.
Why C Because I love the simplicity of the language (maybe I&#39;m just a romantic) and also it is the lingua franca of Linux, which means that it helps to get a better understanding about how things work at a system level.</description>
    </item>
    
  </channel>
</rss>