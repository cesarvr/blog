<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BuildConfig on Cesar&#39;s Bitacora</title>
    <link>https://cesarvr.io/categories/buildconfig/</link>
    <description>Recent content in BuildConfig on Cesar&#39;s Bitacora</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jan 2020 19:24:19 +0100</lastBuildDate>
    
	<atom:link href="https://cesarvr.io/categories/buildconfig/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Performance Showdown: Rust vs Javascript</title>
      <link>https://cesarvr.io/post/rust-performance/</link>
      <pubDate>Wed, 01 Jan 2020 19:24:19 +0100</pubDate>
      
      <guid>https://cesarvr.io/post/rust-performance/</guid>
      <description>After spending some weeks playing with Rust, I felt ready to test my skills and try some programming challenges in the Advent Of Code. My approach to tackle some of those challenges was to solve them on Javascript first (I use it in my day to day) to then port the code to Rust, while porting I just focus on getting the Rust code as elegant as possible. It was after finishing porting this puzzle in particular and feeling a sense of accomplishment that I decided to test how the Rust compiled code will perform against Javascript interpreter.</description>
    </item>
    
    <item>
      <title>4 Ways to Build Applications in OpenShift</title>
      <link>https://cesarvr.io/post/buildconfig/</link>
      <pubDate>Sat, 28 Jul 2018 19:24:19 +0100</pubDate>
      
      <guid>https://cesarvr.io/post/buildconfig/</guid>
      <description>&lt;p&gt;We are going to discuss the different strategies for building our software in OpenShift. These strategies are useful if you need to solve any of the following problems:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>